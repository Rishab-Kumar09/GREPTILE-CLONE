// Prisma schema for AWS RDS PostgreSQL

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HealthCheck {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
}

model Repository {
  id          String   @id @default(cuid())
  userId      String   // Owner of this repository
  name        String
  fullName    String   // Remove @unique since multiple users can have same repo
  description String?
  stars       Int      @default(0)
  forks       Int      @default(0)
  language    String?
  url         String
  bugs        Int      @default(0)
  analyzing   Boolean  @default(false)
  analysisResults Json? // Store detailed analysis results as JSON
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([userId, fullName]) // Unique per user
}

model AnalysisStatus {
  id                String   @id // Analysis UUID
  status            String   // 'initializing' | 'downloading' | 'cloning' | 'scanning' | 'analyzing' | 'completed' | 'failed'
  progress          Int      @default(0)
  filesAnalyzed     Int      @default(0)
  totalFiles        Int      @default(0)
  currentFile       String   @default("")
  results           Json     @default("[]")
  errors            Json     @default("[]")
  startTime         BigInt   // Unix timestamp
  strategy          Json?    // Strategy configuration
  repository        String?  // Repository full name
  repositoryInfo    Json?    // Repository metadata
  estimatedCompletion BigInt? // Unix timestamp
  batchJobId        String?  // AWS Batch job ID
  batchStatus       String?  // AWS Batch status
  batchStatusReason String?  // AWS Batch status reason
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model RepositoryFiles {
  id          String   @id // Analysis ID
  repository  String   // Repository full name (e.g., "owner/repo")
  files       Json     // Array of file objects with path, content, size, type
  metadata    Json     // Repository metadata
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([repository])
}

model UserProfile {
  id           String   @id @default("default-user")
  name         String   @default("R.K.")
  email        String?  @default("user@example.com")
  password     String?  // Hashed password
  profileImage String?  // Base64 encoded image
  selectedIcon String?  @default("ðŸ‘¤")
  userTitle    String?  @default("Developer")
  
  // GitHub OAuth fields
  githubConnected Boolean  @default(false)
  githubUsername  String?
  githubAvatarUrl String?
  githubTokenRef  String?  // Reference to AWS Secrets Manager (not the actual token)
  
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
} 